{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.querySelectorAll(\"th\").forEach(function(header) {\n    var ascending = true;\n    header.addEventListener(\"click\", function() {\n        var table = header.closest(\"table\");\n        var columnIndex = Array.from(header.parentNode.children).indexOf(header);\n        var rows = Array.from(table.querySelectorAll(\"tr\")).slice(1);\n        rows.sort(function(a, b) {\n            var cellA = a.children[columnIndex].textContent;\n            var cellB = b.children[columnIndex].textContent;\n            return ascending ? cellA.localeCompare(cellB, undefined, {\n                numeric: true\n            }) : cellB.localeCompare(cellA, undefined, {\n                numeric: true\n            });\n        });\n        rows.forEach(function(row) {\n            return table.appendChild(row);\n        });\n        ascending = !ascending;\n    });\n});\ndocument.querySelectorAll(\"table tr\").forEach(function(row) {\n    row.addEventListener(\"click\", function() {\n        document.querySelectorAll(\"table tr\").forEach(function(r) {\n            return r.classList.remove(\"active\");\n        });\n        row.classList.add(\"active\");\n    });\n});\nfunction createEmployeeForm() {\n    var form = document.createElement(\"form\");\n    form.classList.add(\"new-employee-form\");\n    form.innerHTML = '\\n    <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\\n    <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required></label>\\n    <label>Office:\\n      <select name=\"office\" data-qa=\"office\" required>\\n        <option value=\"\">Select office</option>\\n        <option value=\"Tokyo\">Tokyo</option>\\n        <option value=\"Singapore\">Singapore</option>\\n        <option value=\"London\">London</option>\\n        <option value=\"New York\">New York</option>\\n        <option value=\"Edinburgh\">Edinburgh</option>\\n        <option value=\"San Francisco\">San Francisco</option>\\n      </select>\\n    </label>\\n    <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required></label>\\n    <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required></label>\\n    <button type=\"submit\">Save to table</button>\\n  ';\n    form.addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        var employeeData = {\n            name: form.name.value.trim(),\n            position: form.position.value.trim(),\n            office: form.office.value,\n            age: parseInt(form.age.value, 10),\n            salary: parseFloat(form.salary.value)\n        };\n        if (!validateEmployeeData(employeeData)) return;\n        addEmployeeToTable(employeeData);\n        showNotification(\"Employee added successfully!\", \"success\");\n        form.reset();\n    });\n    document.body.appendChild(form);\n}\nfunction validateEmployeeData(employee) {\n    if (employee.name.length < 4) {\n        showNotification(\"Name must contain at least 4 characters.\", \"error\");\n        return false;\n    }\n    if (employee.age < 18 || employee.age > 90) {\n        showNotification(\"Age must be between 18 and 90.\", \"error\");\n        return false;\n    }\n    if (isNaN(employee.salary) || employee.salary <= 0) {\n        showNotification(\"Salary must be a valid positive number.\", \"error\");\n        return false;\n    }\n    return true;\n}\nfunction showNotification(message, type) {\n    var notification = document.createElement(\"div\");\n    notification.textContent = message;\n    notification.className = type;\n    notification.setAttribute(\"data-qa\", \"notification\");\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        return notification.remove();\n    }, 3000);\n}\nfunction addEmployeeToTable(employee) {\n    var targetTable = document.querySelector(\"table\");\n    if (!targetTable) {\n        // eslint-disable-next-line no-console\n        console.error(\"Table not found.\");\n        return;\n    }\n    var row = targetTable.insertRow();\n    row.insertCell().textContent = employee.name;\n    row.insertCell().textContent = employee.position;\n    row.insertCell().textContent = employee.office;\n    row.insertCell().textContent = employee.age;\n    row.insertCell().textContent = \"$\".concat(employee.salary.toFixed(2));\n}\ncreateEmployeeForm();\nvar tableTarget = document.querySelector(\"table\");\ntableTarget.addEventListener(\"dblclick\", function(evt) {\n    if (evt.target.tagName === \"TD\") {\n        var cell = evt.target;\n        if (tableTarget.querySelector(\".cell-input\")) return;\n        var originalText = cell.textContent;\n        var input = document.createElement(\"input\");\n        input.type = \"text\";\n        input.className = \"cell-input\";\n        input.value = originalText;\n        cell.textContent = \"\";\n        cell.appendChild(input);\n        input.focus();\n        input.addEventListener(\"keydown\", function(e) {\n            if (e.key === \"Enter\") saveValue(input, cell, originalText);\n        });\n        input.addEventListener(\"blur\", function() {\n            saveValue(input, cell, originalText);\n        });\n    }\n});\nfunction saveValue(input, cell, originalText) {\n    var newValue = input.value.trim() || originalText;\n    cell.textContent = newValue;\n}\n\n//# sourceMappingURL=index.53c2f5e7.js.map\n","'use strict';\n\ndocument.querySelectorAll('th').forEach((header) => {\n  let ascending = true;\n\n  header.addEventListener('click', () => {\n    const table = header.closest('table');\n    const columnIndex = Array.from(header.parentNode.children).indexOf(header);\n    const rows = Array.from(table.querySelectorAll('tr')).slice(1);\n\n    rows.sort((a, b) => {\n      const cellA = a.children[columnIndex].textContent;\n      const cellB = b.children[columnIndex].textContent;\n\n      return ascending\n        ? cellA.localeCompare(cellB, undefined, { numeric: true })\n        : cellB.localeCompare(cellA, undefined, { numeric: true });\n    });\n\n    rows.forEach((row) => table.appendChild(row));\n\n    ascending = !ascending;\n  });\n});\n\ndocument.querySelectorAll('table tr').forEach((row) => {\n  row.addEventListener('click', () => {\n    document\n      .querySelectorAll('table tr')\n      .forEach((r) => r.classList.remove('active'));\n\n    row.classList.add('active');\n  });\n});\n\nfunction createEmployeeForm() {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  form.innerHTML = `\n    <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\n    <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required></label>\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\" required>\n        <option value=\"\">Select office</option>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required></label>\n    <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required></label>\n    <button type=\"submit\">Save to table</button>\n  `;\n\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const employeeData = {\n      name: form.name.value.trim(),\n      position: form.position.value.trim(),\n      office: form.office.value,\n      age: parseInt(form.age.value, 10),\n      salary: parseFloat(form.salary.value),\n    };\n\n    if (!validateEmployeeData(employeeData)) {\n      return;\n    }\n    addEmployeeToTable(employeeData);\n    showNotification('Employee added successfully!', 'success');\n    form.reset();\n  });\n\n  document.body.appendChild(form);\n}\n\nfunction validateEmployeeData(employee) {\n  if (employee.name.length < 4) {\n    showNotification('Name must contain at least 4 characters.', 'error');\n\n    return false;\n  }\n\n  if (employee.age < 18 || employee.age > 90) {\n    showNotification('Age must be between 18 and 90.', 'error');\n\n    return false;\n  }\n\n  if (isNaN(employee.salary) || employee.salary <= 0) {\n    showNotification('Salary must be a valid positive number.', 'error');\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction showNotification(message, type) {\n  const notification = document.createElement('div');\n\n  notification.textContent = message;\n  notification.className = type;\n  notification.setAttribute('data-qa', 'notification');\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => notification.remove(), 3000);\n}\n\nfunction addEmployeeToTable(employee) {\n  const targetTable = document.querySelector('table');\n\n  if (!targetTable) {\n    // eslint-disable-next-line no-console\n    console.error('Table not found.');\n\n    return;\n  }\n\n  const row = targetTable.insertRow();\n\n  row.insertCell().textContent = employee.name;\n  row.insertCell().textContent = employee.position;\n  row.insertCell().textContent = employee.office;\n  row.insertCell().textContent = employee.age;\n  row.insertCell().textContent = `$${employee.salary.toFixed(2)}`;\n}\n\ncreateEmployeeForm();\n\nconst tableTarget = document.querySelector('table');\n\ntableTarget.addEventListener('dblclick', (evt) => {\n  if (evt.target.tagName === 'TD') {\n    const cell = evt.target;\n\n    if (tableTarget.querySelector('.cell-input')) {\n      return;\n    }\n\n    const originalText = cell.textContent;\n    const input = document.createElement('input');\n\n    input.type = 'text';\n    input.className = 'cell-input';\n    input.value = originalText;\n\n    cell.textContent = '';\n    cell.appendChild(input);\n    input.focus();\n\n    input.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        saveValue(input, cell, originalText);\n      }\n    });\n\n    input.addEventListener('blur', () => {\n      saveValue(input, cell, originalText);\n    });\n  }\n});\n\nfunction saveValue(input, cell, originalText) {\n  const newValue = input.value.trim() || originalText;\n\n  cell.textContent = newValue;\n}\n"],"names":["showNotification","message","type","notification","document","createElement","textContent","className","setAttribute","body","appendChild","setTimeout","remove","querySelectorAll","forEach","header","ascending","addEventListener","table","closest","columnIndex","Array","from","parentNode","children","indexOf","rows","slice","sort","a","b","cellA","cellB","localeCompare","undefined","numeric","row","r","classList","add","form","innerHTML","e","preventDefault","employeeData","name","value","trim","position","office","age","parseInt","salary","parseFloat","employee","length","isNaN","addEmployeeToTable","targetTable","querySelector","console","error","insertRow","insertCell","concat","toFixed","reset","tableTarget","saveValue","input","cell","originalText","newValue","evt","target","tagName","focus","key"],"version":3,"file":"index.53c2f5e7.js.map"}